unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Menus, Vcl.ExtCtrls,
  OoMisc, AdStatLt, Vcl.ComCtrls, Vcl.XPMan, Vcl.DBCGrids, Vcl.WinXPanels,
  AdPort, RzBorder, RzTrkBar, Vcl.Mask, RzEdit, RzDBEdit, RzDBSpin,
  Vcl.Samples.Spin, VaClasses, VaComm, VCLTee.TeCanvas, RzStatus;

type
  TForm1 = class(TForm)
    portComboBox: TComboBox;
    Label1: TLabel;
    baudrateComboBox: TComboBox;
    Label2: TLabel;
    openPortClickButton: TButton;
    closePortClickButton: TButton;
    Label3: TLabel;
    lightIntensityNumberLabel: TLabel;
    saveClickButton: TButton;
    Label4: TLabel;
    Label5: TLabel;
    fontComboBox: TComboBox;
    Label6: TLabel;
    fontColorComboBox: TComboBox;
    Label7: TLabel;
    backgroundColorComboBox: TComboBox;
    Label8: TLabel;
    rotateComboBox: TComboBox;
    Label9: TLabel;
    scrollComboBox: TComboBox;
    Label10: TLabel;
    flashComboBox: TComboBox;
    ApdStatusLight1: TApdStatusLight;
    ConnectLabel: TLabel;
    Label11: TLabel;
    fontWidthComboBox: TComboBox;
    Label12: TLabel;
    horizontalAligComboBox: TComboBox;
    Label13: TLabel;
    verticalAlignComboBox: TComboBox;
    Label14: TLabel;
    deleteTextClickButton: TButton;
    resetClickButton: TButton;
    okClickButton: TButton;
    textToDisplayEditor: TEdit;
    lightIntensityTrackBar: TTrackBar;
    spacingSpinEdit: TSpinEdit;
    textAreaRadioGroup: TRadioGroup;
    ResetAllClickButton: TButton;
    xPositionSpinEdit: TSpinEdit;
    yPositionSpinEdit: TSpinEdit;
    widthSpinEdit: TSpinEdit;
    heightSpinEdit: TSpinEdit;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    VaComm1: TVaComm;
    procedure FormCreate(Sender: TObject);
    procedure openPortClickButtonClick(Sender: TObject);
    procedure closePortClickButtonClick(Sender: TObject);
    procedure saveClickButtonClick(Sender: TObject);
    procedure lightIntensityTrackBarChange(Sender: TObject);
    procedure okClickButtonClick(Sender: TObject);
    procedure resetClickButtonClick(Sender: TObject);
    procedure deleteTextClickButtonClick(Sender: TObject);
    procedure ResetAllClickButtonClick(Sender: TObject);
    procedure textAreaRadioGroupClick(Sender: TObject);
    



  private
    { Private declarations }
  public
  
    { Public declarations }
     
  end;

var

  Form1: TForm1;
         saved:boolean;
         textToSend:string;
         currentTextArea:integer;

implementation

{$R *.dfm}

uses OpenPortForm;








procedure TForm1.FormCreate(Sender: TObject);
var
  i: Integer;
begin

    //Initialize Ports selection
    VaComm1.GetComPortNames(portComboBox.Items);
    portComboBox.ItemIndex:=0;

     //Initialize Baudrate selection
     baudrateComboBox.Items.Add('9600');
     baudrateComboBox.Items.Add('19200');
     baudrateComboBox.Items.Add('38400');
     baudrateComboBox.Items.Add('57600');
     baudrateComboBox.Items.Add('115200');
     baudrateComboBox.ItemIndex := 0;

     //Initialize Font selection
     fontComboBox.Items.Add('Small');
     fontComboBox.Items.Add('Centered');
     fontComboBox.Items.Add('Large');
     fontComboBox.ItemIndex:=1;

     //Initialize Font Color Selection
     fontColorComboBox.Items.Add('OFF');
     fontColorComboBox.Items.Add('Red');
     fontColorComboBox.Items.Add('Green');
     fontColorComboBox.Items.Add('Yellow');
     fontColorComboBox.ItemIndex:=0;

     //Initialize Background Color Selection
     backgroundColorComboBox.Items.Add('OFF');
     backgroundColorComboBox.Items.Add('Red');
     backgroundColorComboBox.Items.Add('Green');
     backgroundColorComboBox.Items.Add('Yellow');
     backgroundColorComboBox.ItemIndex:=0;

     //Initialize Rotate selection
     rotateComboBox.Items.Add('0');
     rotateComboBox.Items.Add('90');
     rotateComboBox.Items.Add('180');
     rotateComboBox.Items.Add('270');
     rotateComboBox.ItemIndex:=0;

     //Initialize Scroll selection
     scrollComboBox.Items.Add('OFF');
     scrollComboBox.Items.Add('ON');
     scrollComboBox.ItemIndex:=0;

     //Initialize Flash selection
     flashComboBox.Items.Add('OFF');
     flashComboBox.Items.Add('ON');
     flashComboBox.ItemIndex:=0;

     //Initialize Font Width selection
     fontWidthComboBox.Items.Add('Proportional');
     fontWidthComboBox.Items.Add('Fixed');
     fontWidthComboBox.ItemIndex:=0;

     //Initialize Horizontal Alignemt selection
     horizontalAligComboBox.Items.Add('Align Left');
     horizontalAligComboBox.Items.Add('Align Right');
     horizontalAligComboBox.Items.Add('Center');
     horizontalAligComboBox.ItemIndex:=2;

     //Initialize Vertical Alignemt selection
     verticalAlignComboBox.Items.Add('Align Top');
     verticalAlignComboBox.Items.Add('Align Bottom');
     verticalAlignComboBox.Items.Add('Center');
     verticalAlignComboBox.ItemIndex:=2;

     //Initialize Spacing SpinEdit
     spacingSpinEdit.MaxValue:=8;
     spacingSpinEdit.MinValue:=0;
     spacingSpinEdit.Increment:=1;
     spacingSpinEdit.EditorEnabled:=false;



     //Initialize Light Intensity BrackBar
     lightIntensityTrackBar.Max:=100;
     lightIntensityTrackBar.Min:=0;
     lightIntensityTrackBar.Frequency:=1;
     lightIntensityTrackBar.LineSize:=1;


     //Initialize Text Area Group selection
     for i := 0 to 15 do
      textAreaRadioGroup.Items.Add('Text Area '+i.ToString);


     //Initialize Position and Size SpinEdit
     xPositionSpinEdit.Increment:=1;
     yPositionSpinEdit.Increment:=1;
     widthSpinEdit.Increment:=1;
     heightSpinEdit.Increment:=1;


end;


//Open Port Settings dialog
procedure TForm1.openPortClickButtonClick(Sender: TObject);

begin
  Form4.Show;
end;


//Close Port and disable all buttons
procedure TForm1.closePortClickButtonClick(Sender: TObject);
begin

ConnectLabel.Caption := 'Disconnected';
ApdStatusLight1.Lit := False;
Form4.comPortTVaComm.Close;


saveClickButton.Enabled:=False;
resetClickButton.Enabled:=False;
ResetAllClickButton.Enabled:=False;
deleteTextClickButton.Enabled:=False;
textAreaRadioGroup.Enabled:=False;
okClickButton.Enabled:=False;
lightIntensityTrackBar.Enabled:=False;
baudrateComboBox.Enabled:=False;


end;





//Save the Baudrate and Light Intensity
procedure TForm1.saveClickButtonClick(Sender: TObject);

begin

saved:=Form4.comPortTVaComm.WriteText('-dac -b'+ baudrateComboBox.Items[baudrateComboBox.ItemIndex] +' -i'+ lightIntensityNumberLabel.Caption +' <CR>'+#10+#13);
if saved = True then
begin
ShowMessage('Data Saved');
end
else
ShowMessage('Data not Saved');

end;



//Text Area Selections on Change text area selection reset all the other parameters
procedure TForm1.textAreaRadioGroupClick(Sender: TObject);
var
  i: Integer;
begin
     textToDisplayEditor.Text:='';
     fontComboBox.ItemIndex:=1;
     fontColorComboBox.ItemIndex:=0;
     backgroundColorComboBox.ItemIndex:=0;
     rotateComboBox.ItemIndex:=0;
     scrollComboBox.ItemIndex:=0;
     flashComboBox.ItemIndex:=0;
     fontWidthComboBox.ItemIndex:=0;
     horizontalAligComboBox.ItemIndex:=2;
     verticalAlignComboBox.ItemIndex:=2;
     spacingSpinEdit.Value:=0;
     xPositionSpinEdit.value:=0;
     yPositionSpinEdit.value:=0;
     widthSpinEdit.value:=0;
     heightSpinEdit.Value:=0;

end;



//Restore all the parameters for all text areas
procedure TForm1.ResetAllClickButtonClick(Sender: TObject);
begin
 saved:= Form4.comPortTVaComm.WriteText('-dac'+#10+#13);

 if saved = True then
    begin
     fontComboBox.ItemIndex:=1;
         fontColorComboBox.ItemIndex:=0;
         backgroundColorComboBox.ItemIndex:=0;
         rotateComboBox.ItemIndex:=0;
         scrollComboBox.ItemIndex:=0;
         flashComboBox.ItemIndex:=0;
         fontWidthComboBox.ItemIndex:=0;
         horizontalAligComboBox.ItemIndex:=2;
         verticalAlignComboBox.ItemIndex:=2;
         spacingSpinEdit.Value:=0;
         lightIntensityTrackBar.Position:=0;
         lightIntensityNumberLabel.Caption:='0';

    ShowMessage('Data saved');
    end
    else
    ShowMessage('Data not saved');
    end;


//Get Light Intensity form track bar and show it on the label
procedure TForm1.lightIntensityTrackBarChange(Sender: TObject);
begin
    lightIntensityNumberLabel.Caption:=lightIntensityTrackBar.Position.ToString;
end;


//Send the data for the choosen text area.
procedure TForm1.okClickButtonClick(Sender: TObject);
var
  i: Integer;newText:string;
begin
   for i := 0 to 15 do
     if textAreaRadioGroup.ItemIndex=i then
     begin
         currentTextArea:=i; //Get the selected text area index to use if the user want to reset it's data.
        newText:= '-sc' + i.ToString +
                  ' -sg'+xPositionSpinEdit.Text+','+yPositionSpinEdit.Text+','+widthSpinEdit.Text+','+heightSpinEdit.Text +
                  ' -f' + fontComboBox.ItemIndex.ToString +
                  ' -sls' + spacingSpinEdit.Text +
                  ' -sha' + horizontalAligComboBox.ItemIndex.ToString +
                  ' -sva' +  verticalAlignComboBox.ItemIndex.ToString +
                  ' -sfm' + fontWidthComboBox.ItemIndex.ToString +
                  ' -cf' + fontColorComboBox.ItemIndex.ToString +
                  ' -t"' + textToDisplayEditor.Text + '"' +
                  ' -sva' + backgroundColorComboBox.ItemIndex.ToString +
                  ' -sr' + rotateComboBox.ItemIndex.ToString +
                  ' -nss' + scrollComboBox.ItemIndex.ToString +
                  ' -r' + flashComboBox.ItemIndex.ToString +
                  ' <CR>';
     end
     else
     continue;


      saved:= Form4.comPortTVaComm.WriteText(newText+#10+#13);

      if saved = True then
      begin
      ShowMessage('Data saved');
      end
      else
      ShowMessage('Data not saved');
end;


//Reset parametsers for the chosen text area.
procedure TForm1.resetClickButtonClick(Sender: TObject);
begin
     saved:= Form4.comPortTVaComm.WriteText('-sc'+currentTextArea.ToString+' -dc'+#10+#13);



     if saved = True then
      begin

       fontComboBox.ItemIndex:=1;
       fontColorComboBox.ItemIndex:=0;
       backgroundColorComboBox.ItemIndex:=0;
       rotateComboBox.ItemIndex:=0;
       scrollComboBox.ItemIndex:=0;
       flashComboBox.ItemIndex:=0;
       fontWidthComboBox.ItemIndex:=0;
       horizontalAligComboBox.ItemIndex:=2;
       verticalAlignComboBox.ItemIndex:=2;
       spacingSpinEdit.Value:=0;

      ShowMessage('Data saved');
      end
      else
      ShowMessage('Data not saved');

end;


//Delete the text for the chosen text area.
procedure TForm1.deleteTextClickButtonClick(Sender: TObject);
begin
   Form4.comPortTVaComm.WriteText('-sc'+currentTextArea.ToString +' -clr'+#10+#13);

    if saved = True then
      begin
      textToDisplayEditor.Text:='';

      ShowMessage('Data saved');
      end
      else
      ShowMessage('Data not saved');
end;

end.
